/*
 * Copyright (c) 2011-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
description = 'Reactor Quick-start components'

ext {
  gradleVersion = '2.2.1'
  gradleScriptDir = "${rootProject.projectDir}/gradle"

  // Languages
  groovyVersion = '2.4.1'

  // Logging
  slf4jVersion = '1.7.12'
  logbackVersion = '1.1.2'

  // Spring
  springVersion = '4.1.5.RELEASE'
  springBootVersion = '1.2.1.RELEASE'
  sdJpaVersion = '1.4.1.RELEASE'

  // Jetty
  jettyVersion = '9.1.4.v20140401'

  // Netty
  nettyVersion = '4.0.27.Final'

  // Reactor
  reactorVersion = '2.1.0.BUILD-SNAPSHOT'

  jacksonDatabindVersion = '2.5.1'

  // Hibernate
  hibernateVersion = '4.3.8.Final'

  // Testing
  spockVersion = '0.7-groovy-2.0'
}

buildscript {
  repositories {
    maven { url "http://repo.spring.io/plugins-release" }
    jcenter()
  }
  dependencies {
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE',
        'org.springframework.build.gradle:propdeps-plugin:0.0.7'
  }
}
apply from: "$gradleScriptDir/setup.gradle"

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  configurations.all {
    exclude group: 'commons-logging'
    exclude module: 'junit'
  }

  group = 'io.projectreactor.quickstart'
  repositories {
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-milestone' }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    jcenter()
    mavenCentral()
  }
}

subprojects { subproject ->
  apply plugin: 'java'
  apply plugin: 'spring-boot'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  [compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:none', '-g']

  // dependencies that are common across all java projects
  dependencies {
    compile "io.projectreactor:reactor-core:$reactorVersion"
    compile "io.projectreactor:reactor-bus:$reactorVersion"
    compile "io.projectreactor:reactor-stream:$reactorVersion"
    // Testing
    testCompile 'junit:junit:4.12',
        'org.hamcrest:hamcrest-library:1.3'
  }

}

project('core') {
  description = 'Reactor quickstart core components'
  dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
  }
}

project('simple') {
  description = 'Reactor quickstart simple event handling example'
  dependencies {
    compile project(':core')
  }
}

project('stream') {
  description = 'Reactor quickstart Streaming example'
  dependencies {
    compile project(':core')
  }
}

project('groovy') {
  description = 'Reactor quickstart Groovy example'

  apply plugin: 'groovy'

  dependencies {
    compile project(':core')

    // Groovy
    compile "org.codehaus.groovy:groovy-all:$groovyVersion",
        "io.projectreactor:reactor-groovy:$reactorVersion"
  }
}

project('websocket') {
  description = 'Reactor quickstart websocket example'
  dependencies {
    compile project(':core')

    // WebSocket support
    compile "io.projectreactor:reactor-net:$reactorVersion"
    compile "io.netty:netty-all:$nettyVersion"

    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
  }
}

project('spring') {
  description = 'Reactor quickstart example using Spring'
  dependencies {
    compile project(":core")

    // Reactor
    compile "io.projectreactor.spring:reactor-spring-context:$reactorVersion"


    // Hibernate
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"

    // Spring
    compile 'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.boot:spring-boot-starter-data-jpa'

    runtime "org.hsqldb:hsqldb:2.3.2"
  }

  task(startTradeServer, dependsOn: 'classes', type: JavaExec) {
    main = 'reactor.quickstart.complex.ComplexTradeServerExample'
    classpath = sourceSets.main.runtimeClasspath
  }
}



